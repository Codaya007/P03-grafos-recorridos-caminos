/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.grafo.Grafo;
import controlador.grafo.GrafoDirigidoEtiquetado;
import controlador.listas.ListaEnlazada;
import java.util.Arrays;
import javax.swing.JOptionPane;

public class FrmGrafoRecorridosCaminos extends javax.swing.JDialog {

    private Grafo grafo;

    /**
     * Creates new form FrmGrafo
     */
    public FrmGrafoRecorridosCaminos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        limpiarInputs();
        // cargarCombos();
    }

    public FrmGrafoRecorridosCaminos(java.awt.Frame parent, boolean modal, Grafo grafo, Integer estado) {
        super(parent, modal);
        this.grafo = grafo;
        initComponents();
        limpiarInputs();
        txtResultado.setLineWrap(true);
        cargarCombos();
    }

    private void cargarCombos() {
        try {
            UtilidadesVista.cargarComboAlgoritmos(cbxAlgoritmos);
            UtilidadesVista.cargarComboRecorridos(cbxRecorridos);
            UtilidadesVista.cargarComboNumeros(cbxOrigen, grafo.numVertices());
            UtilidadesVista.cargarComboNumeros(cbxDestino, grafo.numVertices());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void limpiarInputs() {
        cbxRecorridos.setSelectedIndex(-1);
        cbxAlgoritmos.setSelectedIndex(-1);
        cbxOrigen.setSelectedIndex(-1);
        cbxDestino.setSelectedIndex(-1);
    }

    private void insertar(Integer id, Object obj, ListaEnlazada lista) {
        Object o = null;
        try {
            o = lista.obtener((id - 1));
        } catch (Exception e) {
            lista.insertar(o);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnRecorrido = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbxRecorridos = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        btnCAMINOMINIMO = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cbxAlgoritmos = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cbxOrigen = new javax.swing.JComboBox<>();
        cbxDestino = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DETALLE GRAFO");
        getContentPane().setLayout(null);

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        btnRecorrido.setBackground(new java.awt.Color(0, 153, 51));
        btnRecorrido.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnRecorrido.setForeground(new java.awt.Color(255, 255, 255));
        btnRecorrido.setText("Recorrer");
        btnRecorrido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecorridoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("RECORRIDOS");

        jLabel8.setText("Tipo recorrido:");

        cbxRecorridos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxRecorridos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxRecorridosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRecorrido, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxRecorridos, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxRecorridos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(btnRecorrido)
                .addGap(23, 23, 23))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(10, 20, 310, 170);

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));

        btnCAMINOMINIMO.setBackground(new java.awt.Color(0, 153, 51));
        btnCAMINOMINIMO.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnCAMINOMINIMO.setForeground(new java.awt.Color(255, 255, 255));
        btnCAMINOMINIMO.setText("Buscar");
        btnCAMINOMINIMO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCAMINOMINIMOActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("CAMINO M√çNIMO");

        jLabel9.setText("Algoritmo:");

        cbxAlgoritmos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxAlgoritmos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxAlgoritmosActionPerformed(evt);
            }
        });

        jLabel10.setText("Origen:");

        jLabel11.setText("Destino:");

        cbxOrigen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxOrigenActionPerformed(evt);
            }
        });

        cbxDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxDestinoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnCAMINOMINIMO, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbxDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxAlgoritmos, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxAlgoritmos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCAMINOMINIMO)
                        .addGap(6, 6, 6))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(37, Short.MAX_VALUE))))
        );

        getContentPane().add(jPanel3);
        jPanel3.setBounds(330, 20, 310, 170);

        jLabel1.setText("Resultado Obtenido:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 230, 160, 13);

        txtResultado.setColumns(20);
        txtResultado.setRows(5);
        jScrollPane1.setViewportView(txtResultado);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 260, 630, 150);

        setSize(new java.awt.Dimension(664, 502));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbxRecorridosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxRecorridosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxRecorridosActionPerformed

    private void cbxAlgoritmosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxAlgoritmosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxAlgoritmosActionPerformed

    private void cbxOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxOrigenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxOrigenActionPerformed

    private void cbxDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxDestinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxDestinoActionPerformed

    private void btnRecorridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecorridoActionPerformed
        // TODO add your handling code here:
        try {
            Integer indexRecorrido = cbxRecorridos.getSelectedIndex();

            if (indexRecorrido == -1) {
                JOptionPane.showMessageDialog(
                        null,
                        "Seleccione un recorrido",
                        "Informaci√≥n faltante",
                        JOptionPane.ERROR_MESSAGE
                );
            } else if (indexRecorrido == 0) {
                GrafoDirigidoEtiquetado grafoDirigido = (GrafoDirigidoEtiquetado) grafo;

                System.out.println("LISTA ADYACENCIAS");
                System.out.println(Arrays.toString(grafoDirigido.getListaAdycente()));

                String recorrido = "";
                ListaEnlazada<Integer> recorridoAnchura = grafo.recorridoAnchura(1);

                for (int i = 0; i < recorridoAnchura.getSize(); i++) {
                    recorrido += grafoDirigido.obtenerEtiqueta(recorridoAnchura.obtener(i)) + " ";
                }

                txtResultado.setText("EL RECORRIDO POR ANCHURA ES:\n\n" + recorrido);
            } else {
                GrafoDirigidoEtiquetado grafoDirigido = (GrafoDirigidoEtiquetado) grafo;

                System.out.println("LISTA ADYACENCIAS");
                System.out.println(Arrays.toString(grafoDirigido.getListaAdycente()));

                String recorrido = "";
                ListaEnlazada<Integer> recorridoProfundidad = grafo.recorridoProfundidad(1);

                for (int i = 0; i < recorridoProfundidad.getSize(); i++) {
                    recorrido += grafoDirigido.obtenerEtiqueta(recorridoProfundidad.obtener(i)) + " ";
                }

                txtResultado.setText("EL RECORRIDO POR PROFUNDIDAD ES:\n\n" + recorrido);
            }
        } catch (Exception e) {
            txtResultado.setText("NO SE PODIDO RECORRER EL GRAFO :(");
        }
    }//GEN-LAST:event_btnRecorridoActionPerformed

    private void btnCAMINOMINIMOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCAMINOMINIMOActionPerformed
        // TODO add your handling code here:
        try {
            Integer indexRecorrido = cbxAlgoritmos.getSelectedIndex();
            Integer origen = cbxOrigen.getSelectedIndex();
            Integer destino = cbxDestino.getSelectedIndex();

            if (indexRecorrido == -1 || origen == -1 || destino == -1) {
                JOptionPane.showMessageDialog(
                        null,
                        "Seleccione un ALGORITMO, ORIGEN Y DESTINO",
                        "Informaci√≥n faltante",
                        JOptionPane.ERROR_MESSAGE
                );
            } else if (indexRecorrido == 0) {
                GrafoDirigidoEtiquetado grafoDirigido = (GrafoDirigidoEtiquetado) grafo;

                String recorrido = "";
                ListaEnlazada<Integer> caminoDijkstra = grafo.caminoMasCortoDijkstra(origen + 1, destino + 1);

                for (int i = 0; i < caminoDijkstra.getSize(); i++) {
                    recorrido += grafoDirigido.obtenerEtiqueta(caminoDijkstra.obtener(i)) + "  ";
                }

                recorrido += "\nPeso total del camino: " + grafoDirigido.getPesoCaminoMasCorto();

                String result = "EL CAMINO M√ÅS CORTO POR DIJKSTRA ES:\n\n" + recorrido;
                txtResultado.setText(result);
            } else {
                GrafoDirigidoEtiquetado grafoDirigido = (GrafoDirigidoEtiquetado) grafo;

                String recorrido = "";
                ListaEnlazada<Integer> caminoFloyd = grafo.caminoMasCortoFloyd(origen + 1, destino + 1);

                for (int i = 0; i < caminoFloyd.getSize(); i++) {
                    recorrido += grafoDirigido.obtenerEtiqueta(caminoFloyd.obtener(i)) + "  ";
                }
                
                 recorrido += "\nPeso total del camino: " + grafoDirigido.getPesoCaminoMasCorto();

                String result = "EL CAMINO M√ÅS CORTO POR FLOYD ES:\n\n" + recorrido;
                txtResultado.setText(result);
            }
        } catch (Exception e) {
            // e.printStackTrace();
            System.out.println(e.getMessage());
            txtResultado.setText("NO SE HA ENCONTRADO UN CAMINO");
        }
    }//GEN-LAST:event_btnCAMINOMINIMOActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmGrafoRecorridosCaminos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmGrafoRecorridosCaminos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmGrafoRecorridosCaminos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmGrafoRecorridosCaminos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmGrafoRecorridosCaminos dialog = new FrmGrafoRecorridosCaminos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCAMINOMINIMO;
    private javax.swing.JButton btnRecorrido;
    private javax.swing.JComboBox<String> cbxAlgoritmos;
    private javax.swing.JComboBox<String> cbxDestino;
    private javax.swing.JComboBox<String> cbxOrigen;
    private javax.swing.JComboBox<String> cbxRecorridos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtResultado;
    // End of variables declaration//GEN-END:variables
}
